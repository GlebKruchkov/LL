openapi: 3.0.0
info:
  title: Social Network API
  description: API for user authentication and post management
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Proxy Server
  - url: http://localhost:5000
    description: User Service
  - url: http://localhost:50051
    description: Post Service (gRPC)
paths:
  /api/v1/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
                email:
                  type: string
                nickname:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                phone_number:
                  type: string
              required:
                - login
                - password
                - email
                - nickname
                - date_of_birth
                - phone_number
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request (missing fields, invalid data, etc.)

  /api/v1/login:
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
              required:
                - login
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_id:
                    type: integer
        '400':
          description: Invalid login or password

  /api/v1/profile/{nickname}:
    put:
      summary: Update user profile
      parameters:
        - name: nickname
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                phone_number:
                  type: string
              required:
                - nickname
                - date_of_birth
                - phone_number
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request (missing fields, invalid data, etc.)
        '404':
          description: User not found
    get:
      summary: Get user profile
      parameters:
        - name: nickname
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  login:
                    type: string
                  email:
                    type: string
                  nickname:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                  phone_number:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '404':
          description: User not found

  /api/v1/posts:
    post:
      summary: Create a new post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                is_private:
                  type: boolean
                  default: false
                tags:
                  type: array
                  items:
                    type: string
              required:
                - title
                - content
      responses:
        '200':
          description: Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  message:
                    type: string
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized (invalid or missing token)
        '500':
          description: Internal server error

    get:
      summary: List posts with pagination
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of posts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
        '401':
          description: Unauthorized (invalid or missing token)
        '500':
          description: Internal server error

  /api/v1/posts/{post_id}:
    get:
      summary: Get a specific post
      security:
        - bearerAuth: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '401':
          description: Unauthorized (invalid or missing token)
        '403':
          description: Forbidden (access to private post)
        '404':
          description: Post not found
        '500':
          description: Internal server error

    put:
      summary: Update a post
      security:
        - bearerAuth: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                is_private:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Post updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized (invalid or missing token)
        '403':
          description: Forbidden (not post owner)
        '404':
          description: Post not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a post
      security:
        - bearerAuth: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized (invalid or missing token)
        '403':
          description: Forbidden (not post owner)
        '404':
          description: Post not found
        '500':
          description: Internal server error

components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        is_private:
          type: boolean
        tags:
          type: array
          items:
            type: string
      required:
        - id
        - title
        - content
        - user_id
        - created_at
        - updated_at
        - is_private
        - tags

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Use user auth token received during login
